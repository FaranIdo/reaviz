version: 2

# Docker image to use for setup
var_1: &docker_image circleci/node:11.9.0

# Cache key
var_2: &cache_key v1-{{ checksum "package-lock.json" }}

# Settings common to each job
var_3: &job_defaults
  working_directory: ~/repo
  docker:
    - image: *docker_image

# Job step for checking out the source code from GitHub. This also ensures that the source code
# is rebased on top of master.
var_4: &checkout_code
  checkout:
    # After checkout, rebase on top of master. By default, PRs are not rebased on top of master,
    # which we want. See https://discuss.circleci.com/t/1662
    post: git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge"

# Restores the cache that could be available for the current Yarn lock file. The cache usually
# includes the node modules and the Bazel repository cache.
var_5: &restore_cache
  restore_cache:
    key: *cache_key

# Save cahce
var_6: &save_cache
  save_cache:
    key: *cache_key
    paths:
      - "node_modules"

var_7: &attach_workspace
  attach_workspace:
    at: .

# Publish branches
var_8: &publish_branches_filter
  branches:
    only:
      - master

# Ignore branches
var_9: &ignore_branch_filter
  branches:
    ignore:
      - "gh-pages"

jobs:
  prepare:
    <<: *job_defaults
    steps:
      - *checkout_code
      - *restore_cache
      - run: npm install
      - *save_cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  build_package:
    <<: *job_defaults
    steps:
      - *checkout_code
      - *attach_workspace
      - run: npm run build
      - store_artifacts:
          path: ./dist
      - *save_cache

  build_storybook:
    <<: *job_defaults
    steps:
      - *checkout_code
      - *attach_workspace
      - run: npm run build-storybook
      - persist_to_workspace:
          root: .
          paths:
            - storybook-static

  test:
    <<: *job_defaults
    steps:
      - *checkout_code
      - *attach_workspace
      - run: npm test -- --runInBand --no-cache --coverage
      - store_test_results:
          path: ./coverage
      - store_artifacts:
          path: ./coverage

  deploy_storybook:
    <<: *job_defaults
    steps:
      - *checkout_code
      - *attach_workspace
      - run: npm run deploy-storybook

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - prepare:
          filters: *ignore_branch_filter
      - build_package:
          filters: *ignore_branch_filter
          requires:
            - prepare
      - test:
          filters: *ignore_branch_filter
          requires:
            - build_package
      - build_storybook:
          filters: *ignore_branch_filter
          requires:
            - prepare
